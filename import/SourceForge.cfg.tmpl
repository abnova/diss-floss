{
   "_source":"SourceForge",
   "_prefix":"sf",
   "_action":"import",
   "_schema":"sf0514",
   "data":[
      {
         "indicatorName":"devLinks",
         "indicatorDescription":"Links to source code repositories",
         "indicatorType":"character",
         "resultType":"data.frame",
         "resultNames":"Project ID, Enabled, Repo URL, Repo Instructions",
         "requestSQL":"
SELECT group_id, enabled, url_primary, instructions_public
FROM ${schema}.external_tool_links"
      },
      {
         "indicatorName":"prjLicense",
         "indicatorDescription":"Project's license",
         "indicatorType":"character",
         "resultType":"data.frame",
         "resultNames":"Project ID, Project License",
         "requestSQL":"
SELECT group_id, license
FROM ${schema}.groups"
      },
      {
         "indicatorName":"devSupport",
         "indicatorDescription":"Existense of unrestricted dev. support",
         "indicatorType":"character",
         "resultType":"data.frame",
         "requestSQL":"
SELECT group_id, preferred_support_type, preferred_support_resource
FROM ${schema}.groups
WHERE preferred_support_type = 6 AND group_id < 1000"
      },
      {
         "indicatorName":"pubRoadmap",
         "indicatorDescription":"Public availability of project roadmap",
         "indicatorType":"character",
         "resultType":"data.frame",
         "requestSQL":"
SELECT group_id, use_wiki
FROM ${schema}.groups
WHERE group_id < 1000"
      },
      {
         "indicatorName":"dmProcess",
         "indicatorDescription":"Transparency of decision making",
         "indicatorType":"character",
         "resultType":"data.frame",
         "requestSQL":"
SELECT group_id, use_wiki, use_forum
FROM ${schema}.groups
WHERE group_id < 1000"
      },
      {
         "indicatorName":"contribProcess",
         "indicatorDescription":"Transparency of contributions and acceptance process",
         "indicatorType":"character",
         "resultType":"data.frame",
         "requestSQL":"
SELECT g.group_id, g.use_wiki, agl.is_public, agl.submit_instructions, agl.browse_instructions
FROM ${schema}.groups g, ${schema}.artifact_group_list agl
WHERE g.group_id = agl.group_id
AND g.group_id < 1000"
      },
      {
         "indicatorName":"contribPeople",
         "indicatorDescription":"Transparency of contributors to source code",
         "indicatorType":"character",
         "resultType":"data.frame",
         "requestSQL":"
SELECT g.group_id, u.user_id
FROM ${schema}.groups g, ${schema}.users u, ${schema}.project_history ph, ${schema}.project_task pt, ${schema}.project_group_list pgl
WHERE ph.project_task_id = pt.project_task_id
AND pt.group_project_id = pgl.group_project_id
AND g.group_id = pgl.group_id
AND ph.mod_by = u.user_id
AND g.group_id < 1000"
      },
      {
         "indicatorName":"prjMaturity",
         "indicatorDescription":"Project maturity",
         "indicatorType":"character",
         "resultType":"data.frame",
         "resultNames":"Project ID, Latest Release",
         "requestSQL":"
SELECT fp.group_id, MAX(fr.name)
FROM ${schema}.frs_package fp, ${schema}.frs_release fr, ${schema}.frs_status fs
WHERE fp.package_id = fr.package_id
AND fp.group_id < 1000
GROUP BY fp.group_id"
      },
      {
         "indicatorName":"prjAge",
         "indicatorDescription":"Project age",
         "indicatorType":"character",
         "resultType":"data.frame",
         "resultNames":"Project ID, Registration Time",
         "requestSQL":"
SELECT group_id, register_time
FROM ${schema}.groups"
      },
      {
         "indicatorName":"devTeamSize",
         "indicatorDescription":"Development team size",
         "indicatorType":"character",
         "resultType":"data.frame",
         "resultNames":"Project ID, Development Team Size",
         "requestSQL":"
SELECT group_id, COUNT(user_id)
FROM ${schema}.user_group
WHERE grantcvs = 1
AND group_id < 1000
GROUP BY group_id"
      },
      {
         "indicatorName":"totalProjects",
         "indicatorDescription":"Total number of unique projects",
         "indicatorType":"numeric",
         "resultType":"numeric",
         "requestSQL":"SELECT COUNT(DISTINCT group_id) FROM ${schema}.user_group"
      },
      {
         "indicatorName":"totalDevs",
         "indicatorDescription":"Total number of developers per project",
         "indicatorType":"numeric",
         "resultType":"data.frame",
         "requestSQL":"SELECT COUNT(*) FROM ${schema}.user_group WHERE group_id = 19"
      },
      {
         "indicatorName":"AllProjects",
         "indicatorDescription":"Information about all projects",
         "indicatorType":"string",
         "resultType":"data.frame",
         "requestSQL":"SELECT * FROM ${schema}.groups WHERE group_id < 1000"
      }
   ]
}
